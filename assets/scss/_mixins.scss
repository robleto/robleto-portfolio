/*----------------------------------------
General Mixins
----------------------------------------*/

@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

@mixin effect {
	-webkit-transition: all .4s ease-in-out;
	-moz-transition: all .4s ease-in-out;
	-o-transition: all .4s ease-in-out;
	transition: all .4s ease-in-out;
}
@mixin hor-center {
	position: absolute;
	left: 50%;
	-webkit-transform: translateX(-50%);
	-moz-transform: translateX(-50%);
	-ms-transform: translateX(-50%);
	transform: translateX(-50%);
}
@mixin ver-center {
	position: absolute;
	top: 50%;
	-webkit-transform: translateY(-50%);
	-moz-transform: translateY(-50%);
	-ms-transform: translateY(-50%);
	transform: translateY(-50%);
}
@mixin center {
	position: absolute;
	left: 50%;
	top: 50%;
	-webkit-transform: translate(-50%, -50%);
	-moz-transform: translate(-50%, -50%);
	-ms-transform: translate(-50%, -50%);
	transform: translate(-50%, -50%);
}

.effect {
	@include effect;
}
.hor-center {
	@include hor-center;
}
.ver-center {
	@include ver-center;
}
.center {
	@include center;
}





@mixin inner-border-grid($gridname) {

	.#{$gridname}-grid {}
	.#{$gridname}-item {
		padding: 3rem;
		text-align: center;
		border-top: 1px solid $border-color;
		&:first-child {
			border-top: none;
		}
	}

	@media (min-width: 768px) {
		.#{$gridname}-grid {
		  display: grid;
		  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr) ) ;
		  grid-gap: 0px;
		}
		.#{$gridname}-item {
			border-top: 1px solid $border-color;
			border-left: 1px solid $border-color;
			&:nth-child(-n+2) {
				border-top: none;
			}
			&:nth-child(odd) {
				border-left: none;
			}
		}
	}

	@media (min-width: 992px) {
		.#{$gridname}-item {
			border-top: 1px solid $border-color;
			border-left: 1px solid $border-color;
			&:nth-child(-n+2) {
				border-top: 1px solid $border-color;
			}
			&:nth-child(odd) {
				border-left: 1px solid $border-color;
			}
			&:nth-child(-n+3) {
				border-top: none;
			}
			&:first-child,
			&:nth-child(4n) {
				border-left: none;
			}
		}
	}

}






